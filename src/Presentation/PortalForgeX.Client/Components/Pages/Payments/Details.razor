@page "/payment/{Id:guid}"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Sections
@using PortalForgeX.Client.Components.Breadcrumbs
@using PortalForgeX.Client.Components.Widgets.DetailsViews
@using PortalForgeX.Shared.Features.Payments

@rendermode RenderMode.InteractiveWebAssembly
@attribute [StreamRendering(true)]
@attribute [Authorize(Roles = $"{SystemRolesNames.ADMIN}, {SystemRolesNames.MANAGER}, {SystemRolesNames.TENANT_ADMIN}, {SystemRolesNames.TENANT_USER}")]

@inject IPaymentFacade Payments

<PageTitle>Payment Details</PageTitle>

<SectionContent SectionName="top-row">
    <BreadcrumbNavigation>
        <Breadcrumb DisplayText="Payments" Url="/payments" IconCssClass="fas fa-money-bill" />
        <Breadcrumb DisplayText="@(Model?.TransactionId)" IconCssClass="fas fa-money-check-dollar" />
    </BreadcrumbNavigation>
</SectionContent>

<LoadingArea IsLoading="IsLoading">
    <PaymentDetailsView Payment="Model" />
</LoadingArea>

@code {

    [Parameter]
    public Guid Id { get; set; }

    protected bool IsLoading;
    protected PaymentDto? Model { get; set; }

    /// <summary>
    /// Load the Model on page initialization.
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        var result = await Payments.GetByIdAsync(Id);
        if (result is not null && result.Data is not null)
        {
            Model = result.Data;
        }

        IsLoading = false;
        StateHasChanged();
    }
}
